---
- name: "Ensure required parameter(s) are provided."
  ansible.builtin.assert:
    that:
      - wildfly_home is defined
      - wildfly_prospero_home is defined
      - wildfly_install_manifest_dir is defined
      - wildfly_prospero_profile_name is defined
      - wildfly_prospero_install_dir is defined
    quiet: True

- name: "Ensure workdir {{ wildfly_prospero_install_dir }} exists."
  ansible.builtin.file:
    path: "{{ wildfly_prospero_install_dir }}"
    state: directory
    owner: "{{ wildfly_install_user | default(omit) }}"
    group: "{{ wildfly_install_group | default(omit) }}"
    mode: 0750
  become: yes

- name: "Ensure Prospero is installed on target."
  ansible.builtin.unarchive:
    src: "{{ wildfly_prospero_download_url }}"
    dest: "{{ wildfly_prospero_install_dir }}"
    owner: "{{ wildfly_install_user | default(omit) }}"
    group: "{{ wildfly_install_group | default(omit) }}"
    remote_src: yes
  become: yes

- name: "Read target directory information: {{ wildfly_home }}"
  ansible.builtin.stat:
    path: "{{ wildfly_home }}"
  become: yes
  register: path_to_workdir

- name: "Verify metadata on {{ wildfly_home }} are available."
  ansible.builtin.assert:
    that:
      - path_to_workdir is defined and path_to_workdir.stat is defined
    quiet: True

- name: "Create manifests folder"
  ansible.builtin.file:
    path: "{{ wildfly_install_manifest_dir }}"
    state: directory
    group: "{{ wildfly_install.group }}"
    owner: "{{ wildfly_install.user }}"
    mode: '0640'

- name: "Generate Wildfly manifest"
  ansible.builtin.template:
    src: "templates/manifest.yaml.j2"
    dest: "{{ wildfly_install_manifest_dir }}/wildfly-{{ wildfly_version }}-manifest.yaml"
    group: "{{ wildfly_install.group }}"
    owner: "{{ wildfly_install.user }}"
    mode: 0750

- name: "Run Prospero to install server in {{ wildfly_home }}."
  ansible.builtin.include_tasks: run_cli.yml
  vars:
    wildfly_prospero_run_args: "install --dir {{ wildfly_home }} --profile {{ wildfly_prospero_profile_name }} --manifest {{ wildfly_install_manifest_dir }}/wildfly-{{ wildfly_version }}-manifest.yaml"
  when:
    - not path_to_workdir.stat.exists

- name: "Determine available updates for server in {{ wildfly_home }}"
  ansible.builtin.include_tasks: run_cli.yml
  vars:
    wildfly_prospero_run_args: "update list --dir {{ wildfly_home }}"
  when:
    - wildfly_prospero_update is defined
    - path_to_workdir.stat.exists

- name: "Check if any updates are available"
  ansible.builtin.command: |
    echo "{{ prospero_run_results.stdout }}" | grep 'No updates found.'
  register: updates_available
  ignore_errors: True
  changed_when: False

- name: "Verify results from update query."
  ansible.builtin.assert:
    that:
      - updates_available is defined and updates_available.rc is defined
    quiet: True

- name: "Run prospero to update server in {{ wildfly_home }}."
  ansible.builtin.include_tasks: run_cli.yml
  vars:
    wildfly_prospero_run_args: "update perform --dir {{ wildfly_home }} -y"
  when:
    - path_to_workdir.stat.exists
    - wildfly_prospero_update is defined and wildfly_prospero_update
    - updates_available.rc == 1

- name: "Ensure that {{ wildfly_home }} belongs to appropriate user - if defined."
  ansible.builtin.file:
    path: "{{ wildfly_home }}"
    recurse: yes
    owner: "{{ wildfly_install_user }}"
    group: "{{ wildfly_install_group | default(wildfly_install_user) }}"
  when:
    - wildfly_install_user is defined
